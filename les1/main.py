import asyncio
import config
from aiogram import Bot, Dispatcher, types,F
from aiogram.filters.command import Command
import logging
import random
from keyboards import kb1, kb2
from random_fox import fox


#–í–∫–ª—é—á–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

#–°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=config.token)

#–î–∏—Å–ø–µ—á–µ—Ä
dp = Dispatcher()


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}', reply_markup=kb1)


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /info
@dp.message(F.text == '–ò–Ω—Ñ–æ')
@dp.message(Command("info"))
async def cmd_info(message: types.Message):
    await message.reply("–ê–¥—Ä–µ—Å –∫–ª–∏–Ω–∏–∫–∏: –≥.–ú–æ—Å–∫–≤–∞, –î–µ—Ä–±–µ–Ω–µ–≤—Å–∫–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è,–¥.13/17, —Å—Ç—Ä.1. –í—Ö–æ–¥ —Å —Ç–æ—Ä—Ü–∞. 24/7 ")


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@dp.message(F.text == '–°—Ç–æ–ø')
@dp.message(Command("stop"))
async def cmd_info(message: types.Message):
    await message.reply("–ñ–µ–ª–∞–µ–º –∑–¥–æ—Ä–æ–≤—å—è –í–∞–º –∏ –í–∞—à–∏–º –ø–∏—Ç–æ–º—Ü–∞–º!")


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /close
@dp.message(F.text == '–ó–∞–∫—Ä—ã—Ç—å')
@dp.message(Command("close"))
async def cmd_info(message: types.Message):
    await message.reply("–ú—ã –Ω–∞ —Å–≤—è–∑–∏ —Å –í–∞–º–∏ 24/7!")


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@dp.message(F.text == '–ü–æ–∫–∞–∂–∏—Ç–µ –ª–∏—Å—É')
@dp.message(Command('fox'))
@dp.message(Command('–ª–∏—Å–∞'))
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.reply(f'–í–æ—Ç –í–∞–º –ª–∏—Å–∞, {name}!')
    await message.answer_photo(photo=img_fox)


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer(f'–Ø –±–æ—Ç, {name}')
    elif '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup=kb2)
    elif '–ø–æ–∫–∞–∂–∏ —Ñ–æ–∫—É—Å' in msg_user:
        await message.answer_dice(emoji="üé≤")
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())